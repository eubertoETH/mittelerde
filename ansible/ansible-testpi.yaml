---
- name: Basic Setup and Container Deployment on Raspberry Pi
  hosts: raspberrypi
  become: true
  vars:
    compose_files:
      - { src: "/Users/euberto/Desktop/ansibletest/Compose/docker-compose.paperless.yml", dest: "/home/euberto/containers/paperless/docker-compose.yml" }
      - { src: "/Users/euberto/Desktop/ansibletest/Compose/docker-compose.portainer.yml", dest: "/home/euberto/containers/portainer/docker-compose.yml" }
      - { src: "/Users/euberto/Desktop/ansibletest/Compose/docker-compose.homer.yml", dest: "/home/euberto/containers/homer/docker-compose.yml" }
      - { src: "Users/euberto/Desktop/ansibletest/Compose/docker-compose.hass.yml", dest: "/home/euberto/containers/hass/docker-compose.yml" } 
    container_paths:
      paperless:
        path: /home/euberto/containers/paperless
        folders:
          - consume
          - data
          - media
          - pgdata
          - redisdata
      homer:
        path: /home/euberto/containers/homer
        folders:
          - config
      portainer:
        path: /home/euberto/containers/portainer
        folders: []

  tasks:
    - name: Ensure main container directories exist
      ansible.builtin.file:
        path: "{{ item.value.path }}"
        state: directory
        mode: '0755'
      with_items: "{{ container_paths | dict2items }}"

    - name: Ensure necessary subfolders exist for each container
      ansible.builtin.file:
        path: "{{ item.0.value.path }}/{{ item.1 }}"
        state: directory
        mode: '0755'
      with_subelements:
        - "{{ container_paths | dict2items }}"
        - value.folders

    - name: Copy Docker Compose files to Raspberry Pi
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0644'
      with_items: "{{ compose_files }}"

    - name: Run Docker Compose for each container
      ansible.builtin.command:
        cmd: docker-compose up -d
      args:
        chdir: "{{ item.value.path }}"
      with_items: "{{ container_paths | dict2items }}"
      changed_when: false  # Command does not modify if containers are already up

    - name: Copy Homer config file to Raspberry Pi
      ansible.builtin.copy:
        src: "/Users/euberto/Desktop/ansibletest/homer/config.yml"
        dest: "/home/euberto/containers/homer/config.yml"
        mode: '0644'

    - name: Create Paperless superuser
      ansible.builtin.shell: |
        docker exec paperless ./manage.py createsuperuser --no-input --username root
      args:
        stdin: "paperless\npaperless\n"
      environment:
        DJANGO_SUPERUSER_USERNAME: root
        DJANGO_SUPERUSER_PASSWORD: paperless
        DJANGO_SUPERUSER_EMAIL: ""
      failed_when: "'already exists' not in ansible_facts.stdout"  # Allow task to pass if user exists
      changed_when: false  # Ensure task doesn't report a change unnecessarily#
